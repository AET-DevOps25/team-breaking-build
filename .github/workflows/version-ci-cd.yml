name: CI/CD Pipeline for Version Microservice

on:
  push:
    paths:
      - 'server/version/**'
      - 'helm/version/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: server/version
  WORKING_DIRECTORY: server/version
  HELM_NAMESPACE: recipefy
  HELM_RELEASE_NAME: version
  CHART_PATH: ./helm/version
  SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
  SECRET_FILE: ./helm/version/templates/secret.yaml

jobs:
  test:
    name: Test Project
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run Gradle Build
        run: ./gradlew build --no-daemon

  build:
    name: Build and Push Docker Images
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate Docker Image Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ env.WORKING_DIRECTORY }}
          file: ./${{ env.WORKING_DIRECTORY }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Rancher with Helm
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Configure Kubernetes Context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Set up SOPS
        uses: nhedger/setup-sops@v2
        with:
          version: 3.8.1

      - name: Decrypt secret
        run: |
          sops --decrypt "$SECRET_FILE" > tmp && mv tmp "$SECRET_FILE"

      - name: Set image tag
        run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Set image tag
        run: |
          if [ -z "$GITHUB_SHA" ]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=sha-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
          fi

      - name: Deploy Helm Chart
        run: |
          helm upgrade --install ${{ env.HELM_RELEASE_NAME }} ${{ env.CHART_PATH }} \
            --namespace ${{ env.HELM_NAMESPACE }} \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --wait --timeout 5m
