name: Build and Push Docker Images

on:
  push:
    branches: [main]
    paths:
      - 'client/**'
      - 'server/**'
      - '.github/workflows/**'

jobs:
  test:
    name: Build projects
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service:
          - "client,node,client"
          - "recipe,gradle,server/recipe"
          - "version,gradle,server/version"
          - "api-gateway,gradle,server/api-gateway"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Parse service info
        id: vars
        run: |
          IFS=',' read -r name type path <<< "${{ matrix.service }}"
          echo "name=$name" >> $GITHUB_OUTPUT
          echo "type=$type" >> $GITHUB_OUTPUT
          echo "path=$path" >> $GITHUB_OUTPUT

      - name: Setup Node.js (for pnpm)
        if: steps.vars.outputs.type == 'node'
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Build Next.js Client with pnpm
        if: steps.vars.outputs.type == 'node'
        working-directory: ${{ steps.vars.outputs.path }}
        run: |
          pnpm install
          pnpm run build

      - name: Set up JDK 21 for Gradle builds
        if: steps.vars.outputs.type == 'gradle'
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Gradle for Gradle builds
        if: steps.vars.outputs.type == 'gradle'
        uses: gradle/actions/setup-gradle@v4

      - name: Run Gradle Build
        if: steps.vars.outputs.type == 'gradle'
        working-directory: ${{ steps.vars.outputs.path }}
        run: ./gradlew build --no-daemon

  build:
    name: Build and Push Docker Images
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service: [client, server/api-gateway, server/recipe, server/version]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata (tags and labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.service }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
