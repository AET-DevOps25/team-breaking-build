auth:
  existingSecret: keycloak-auth-credentials
  passwordSecretKey: admin-password

proxyAddressForwarding: true

service:
  type: ClusterIP
  port: 8080

replicaCount: 3

ingress:
  hostname: keycloak.team-breaking-build.student.k8s.aet.cit.tum.de
  enabled: true
  ingressClassName: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  tls: true
  existingSecret: team-breaking-build-tls

postgresql:
  enabled: false

externalDatabase:
  enabled: true
  existingSecret: keycloak-postgres-credentials
  existingSecretUserKey: db-user
  existingSecretDatabaseKey: db-name
  existingSecretPasswordKey: db-password

image:
  registry: docker.io
  repository: bitnami/keycloak
  tag: latest
  pullPolicy: IfNotPresent

serviceAccount:
  create: true
  name: "keycloak"

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

global:
  security:
    allowInsecure: true

metrics:
  enabled: true
  service:
    ports:
      http: 8080
      https: 8443
      metrics: 9000
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.metrics.service.ports.metrics }}"

extraEnvVarsCM: keycloak-config

keycloakConfigCli:
  enabled: true
  extraEnvVarsSecret: keycloak-realms-credentials
  existingConfigmap: keycloak-realm-import
