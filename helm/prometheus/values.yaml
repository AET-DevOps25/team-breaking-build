namespace: team-breaking-build

name: prometheus

image:
  repository: bitnami/prometheus
  tag: 2.52.0
  pullPolicy: IfNotPresent

replicaCount: 2

service:
  type: ClusterIP
  port: 9090

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

persistence:
  enabled: true
  storageClass: csi-rbd-sc
  size: 10Gi
  annotations:
    backup.velero.io/backup-volumes: prometheus-data

securityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]

alerts:
  enabled: true
  rules:
    - alert: InstanceDown
      expr: up == 0
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: "Instance {{ $labels.instance }} is down"

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus

livenessProbe:
  httpGet:
    path: /
    port: 9090
  initialDelaySeconds: 15
  periodSeconds: 20
readinessProbe:
  httpGet:
    path: /
    port: 9090
  initialDelaySeconds: 5
  periodSeconds: 10

terminationGracePeriodSeconds: 60

serviceAccount:
  create: true
  automount: true

nodeSelector: {}
tolerations: []
