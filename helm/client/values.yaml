prefix: recipefy
name: client

replicaCount: 2

image:
  repository: ghcr.io/aet-devops25/team-breaking-build/client
  tag: latest
  pullPolicy: Always

service:
  type: ClusterIP
  port: 3000

container:
  name: client
  port: 3000
  portName: http
  protocol: TCP

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8080"
  cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  app.kubernetes.io/version: "1.0.0"
  sidecar.istio.io/inject: "true"

podLabels: {}

serviceAccount:
  create: true
  automount: false

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  tls:
    - hosts:
        - team-breaking-build.student.k8s.aet.cit.tum.de
      secretName: team-breaking-build-tls
  className: nginx
  hosts:
    - host: team-breaking-build.student.k8s.aet.cit.tum.de
      paths:
        - path: /
          pathType: Prefix

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70

livenessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 2
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 2
  successThreshold: 1
  failureThreshold: 3
