apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grafana.fullname" . }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "grafana.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "grafana.name" . }}
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
      serviceAccountName: {{ include "grafana.serviceAccountName" . }}
      containers:
        - name: grafana
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: admin-password
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            {{- if .Values.dashboards.enabled }}
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: {{ include "grafana.pvcName" . }}
        - name: grafana-datasources
          configMap:
            name: {{ include "grafana.configName" . }}
        {{- if .Values.dashboards.enabled }}
        - name: grafana-dashboards
          configMap:
            name: {{ include "grafana.fullname" . }}-dashboards
        {{- end }}
