prefix: recipefy
name: weaviate

replicaCount: 1

image:
  repository: semitechnologies/weaviate
  tag: "1.24.1"
  pullPolicy: Always

service:
  type: ClusterIP
  port: 8080
  grpcPort: 50051

container:
  name: weaviate
  port: 8080
  portName: http
  protocol: TCP

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/v1/.well-known/ready"
  prometheus.io/port: "8080"
  cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  app.kubernetes.io/version: "1.24.1"
  sidecar.istio.io/inject: "true"

podLabels: {}

serviceAccount:
  create: true
  automount: false

resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 2Gi

# Weaviate specific configuration
weaviate:
  # Authentication
  authentication:
    anonymousAccessEnabled: true
  
  # Persistence
  persistence:
    dataPath: "/var/lib/weaviate"
  
  # Vectorizer configuration
  vectorizer:
    defaultModule: "text2vec-transformers"
  
  # Modules
  modules:
    enabled: ["text2vec-transformers"]
  
  # Cluster configuration
  cluster:
    hostname: "node1"
  
  # Logging
  logging:
    level: "info"
  
  # Query defaults
  query:
    defaults:
      limit: 25

# Environment variables
env:
  - name: QUERY_DEFAULTS_LIMIT
    value: "25"
  - name: AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED
    value: "true"
  - name: PERSISTENCE_DATA_PATH
    value: "/var/lib/weaviate"
  - name: DEFAULT_VECTORIZER_MODULE
    value: "text2vec-transformers"
  - name: ENABLE_MODULES
    value: "text2vec-transformers"
  - name: CLUSTER_HOSTNAME
    value: "node1"
  - name: LOG_LEVEL
    value: "info"
  - name: TRANSFORMERS_INFERENCE_API
    valueFrom:
      configMapKeyRef:
        name: weaviate-config
        key: TRANSFORMERS_INFERENCE_API

# Persistent volume
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi

# Health checks
livenessProbe:
  httpGet:
    path: /v1/.well-known/ready
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /v1/.well-known/ready
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Node selector, affinity, and tolerations
nodeSelector: {}
affinity: {}
tolerations: [] 